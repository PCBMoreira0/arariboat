; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


#Environments can be used to specify different configurations for the same or different boards,
#allowing you to work with different boards or code configurations without having to create a new project
#or change your workspace settings and directories

#To upload an environment to the board, run the following command:
#    pio run -t upload --environment <environment name>
# You can also specify upload_port, upload_speed and other options if required.

#Be aware that any change to this .ini file will cause PlatformIO to recompile the environment on the next build.
#The more cores your CPU has, the faster the compilation will be.

#Configurations common to all environments
[env]
platform = espressif32 #Platform used for this project
board = ttgo-lora32-v21 #Board used for this project
framework = arduino # Either the Arduino framework or ESP-IDF can be used to program the board
upload_speed = 2000000 #Boards that have CP9102 USB-UART chip can support upload speeds up to 2Mbps, depending on cable length.
build_flags = 
    -std=gnu++17 # Try to use C++17 standard, not sure if this flag is working
monitor_filters = 
		esp32_exception_decoder #Decode exceptions thrown on serial output when board crashes for any reason

[env:ground-lora]
build_src_filter = +<ground-lora.cpp> #Only compile boat-lora.cpp file
build_flags =
    -D SCREEN_ENABLED #Export #define directive/ env variable to enable OLED screen on BoardDefinitions file
lib_deps = 
    https://github.com/me-no-dev/ESPAsyncWebServer.git #Serve web pages asynchronously
    ayushsharma82/AsyncElegantOTA #Over the air firmware updates
    ayushsharma82/WebSerial@^1.4.0 #Serial output over web
    https://github.com/takamasanumuro/arduino-LoRa.git #Library to manipulate registers of the LoRa modem
    
    # Driver for the integrated OLED display. Remember to export the SCREEN_ENABLED directive to enable the screen.
    thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.4.0 
    
    #Custom made library to handle our mavlink messages and system data variables. As all links of the system
    #must share the same message and variable definitions, this library is used by all environments.
    https://github.com/takamasanumuro/mavlink-arariboat.git 

#If using Husarnet VPN to access the board remotely via a device that is also in the VPN, reduce the size of the SPIFFS partition to give more space to the Husarnet libraries.
#board_build.partitions = min_spiffs.csv 

[env:test]
build_src_filter = +<test.cpp> #Only compile test.cpp file
lib_deps = 
    https://github.com/takamasanumuro/arduino-LoRa.git #Library to manipulate registers of the LoRa modem


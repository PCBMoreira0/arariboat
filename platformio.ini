#Environments can be used to specify different configurations for the same or different boards,
#allowing you to work with different boards or code configurations without having to create a new project
#or change your workspace settings and directories

#To upload an environment to the board, run the following command:
#    pio run -t upload --environment <environment name>
# You can also specify upload_port, upload_speed and other options if required.

#Be aware that any change to this .ini file will cause PlatformIO to recompile the environment on the next build.
#The more cores your CPU has, the faster the compilation will be.

#Configurations common to all environments
[env]
platform = https://github.com/platformio/platform-espressif32.git
build_flags = 
    -std=gnu++17 # Try to use C++17 standard, not sure if this flag is working
monitor_filters = 
		esp32_exception_decoder #Decode exceptions thrown on serial output when board crashes for any reason

[env:boat-lora]
board = ttgo-lora32-v21 
framework = arduino # Either the Arduino framework or ESP-IDF can be used to program the board
upload_speed = 2000000 #Boards that have CP9102 USB-UART chip can support upload speeds up to 2Mbps, depending on cable length.
monitor_speed = 9600 # Baud rate for serial comms
extra_scripts = 
    pre:firmware-name.py

#Compilation defines and macros
build_flags =
    -D SCREEN_ENABLED #Export #define directive/ env variable to enable OLED screen on BoardDefinitions file
    -D DEFAULT_LORA_FREQUENCY=915000000 #Hz
    -D DEFAULT_LORA_BANDWIDTH=125000  #Hz
    -D DEFAULT_LORA_SPREADING_FACTOR=7
    -D DEFAULT_LORA_POWER=20 #dBm
    -D DEFAULT_LORA_CODING_RATE=5
    -D DEFAULT_LORA_SYNC_WORD=0xFE
    -D DEFAULT_LORA_CRC_ENABLED=1
    -D MDNS_HOSTNAME=${this.__env__} #[hostname].local will be used to access the board's web server based on the environment name
    -D BAUD_RATE=${this.monitor_speed}
#Libraries required by the environment
lib_deps = 
    https://github.com/me-no-dev/ESPAsyncWebServer.git #Serve web pages asynchronously
    https://github.com/ayushsharma82/AsyncElegantOTA.git#a240fa1 #Over the air firmware updates
    https://github.com/takamasanumuro/arduino-LoRa.git #Library to manipulate registers of the LoRa modem
    
    # Driver for the integrated OLED display. Remember to export the SCREEN_ENABLED directive to enable the screen.
    thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.4.0 
    
    #Custom made library to handle our mavlink messages and system data variables. As all links of the system
    #must share the same message and variable definitions, this library is used by all environments.
    https://github.com/takamasanumuro/mavlink-arariboat.git 

#board_build.partitions = min_spiffs.csv #Uncomment this if more flash memory for code is needed at the expense of SPIFFS
